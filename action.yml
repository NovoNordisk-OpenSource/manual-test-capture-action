name: 'Collect Manual Test Results'
description: 'Collects manual test results based on a selected tag and features.'
inputs:
  tag:
    description: 'Tag [pv|iv|ppv|piv], example: pv'
    required: true
    default: ''
  features:
    description: 'Features path as a string [some/path], example: my-component/requirements'
    required: true
    default: ''
  environment:
    description: 'Environment tests are executed in [validation|production], example: validation'
    required: true
    default: ''
runs:
  using: 'composite'
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        environment="${{ inputs.environment }}"
        tag="${{ inputs.tag }}"
        features="${{ inputs.features }}"

        # Define a regex pattern that allows only letters, numbers, underscores, and hyphens
        alphanum_pattern='^[a-zA-Z0-9_-]+$'
        # Define a regex pattern that matches a valid OS path
        path_pattern='^[a-zA-Z0-9/_\.-]+$'

        # Check 'environment' input
        if [[ ! "$environment" =~ $alphanum_pattern ]]; then
          echo "Error: 'environment' contains invalid characters. Only letters, numbers, underscores, and hyphens are allowed."
          exit 1
        fi

        # Check 'tag' input
        if [[ ! "$tag" =~ $alphanum_pattern ]]; then
          echo "Error: 'tag' contains invalid characters. Only letters, numbers, underscores, and hyphens are allowed."
          exit 1
        fi

        # Check 'features' input
        if [[ ! "$features" =~ $path_pattern ]]; then
          echo "Error: 'features' contains invalid characters. Only letters, numbers, underscores, hyphens, periods, and slashes are allowed."
          exit 1
        fi

        echo "Inputs are valid."

    - name: Checkout code
      uses: actions/checkout@v4.1.7
      with:
        repository: lasselundstenjensen/htmx-manual-testresult-generator
        clean: true

    - name: Set up Go environment
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: false

    - name: Clean up the output directory
      shell: bash
      run: rm -rf output

    - name: Install LocalTunnel
      shell: bash
      run: npm install -g localtunnel

    - name: Build the HTMX web service
      shell: bash
      run: go build -o webserver .

    - name: Convert tag to lowercase
      shell: bash
      id: lowercase_tag
      run: echo "tag_lower=$(echo '${{ inputs.tag }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

    - name: Convert environment to lowercase
      shell: bash
      id: lowercase_environment
      run: echo "environment_lower=$(echo '${{ inputs.environment }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

    - name: Start LocalTunnel and wait for HTMX web service
      shell: bash
      run: |
        TIMESTAMP=$(date +%s)
        SUBDOMAIN="manual-test-${TIMESTAMP}"
        IP_ADDRESS=$(curl -s ipv4.icanhazip.com | tr -d '\n')
        lt --port 8080 --subdomain ${SUBDOMAIN} > url.txt &
        sleep 5
        echo -e "Your service is available at: https://${SUBDOMAIN}.loca.lt"
        echo -e "PLEASE NOTE: The IP address is required as the password on the webpage: \033[32m${IP_ADDRESS}\033[0m"
        echo "If you get a '502 Bad Gateway' error, refresh the page."
        # TAG_LOWER=$(echo "${{ inputs.tag }}" | tr '[:upper:]' '[:lower:]')
        ./webserver --${{ steps.lowercase_tag.outputs.tag_lower }} --features-dir "${{ inputs.features }}" --environment ${{ steps.lowercase_environment.outputs.environment_lower }}

    - name: List all generated test result .json files
      shell: bash
      run: find output -name '*-result.json'

    - name: Print the content of all .json files in the output directory
      shell: bash
      run: find output -name '*-result.json' -exec cat {} \;

    - name: Upload test results
      uses: actions/upload-artifact@v4.4.0
      with:
        name: manual-test-results-${{ steps.lowercase_environment.outputs.environment_lower }}-${{ steps.lowercase_tag.outputs.tag_lower }}
        path: output/
